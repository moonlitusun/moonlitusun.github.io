<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>☀️ Moonlit</title>
  
  <subtitle>窮且益堅，不墜青雲之志</subtitle>
  <link href="https://moonlitusun.github.io/atom.xml" rel="self"/>
  
  <link href="https://moonlitusun.github.io/"/>
  <updated>2024-01-20T05:58:55.855Z</updated>
  <id>https://moonlitusun.github.io/</id>
  
  <author>
    <name>Roc Sun</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>我的2023总结</title>
    <link href="https://moonlitusun.github.io/2024/01/20/%E6%88%91%E7%9A%842023%E6%80%BB%E7%BB%93/"/>
    <id>https://moonlitusun.github.io/2024/01/20/%E6%88%91%E7%9A%842023%E6%80%BB%E7%BB%93/</id>
    <published>2024-01-20T05:58:29.000Z</published>
    <updated>2024-01-20T05:58:55.855Z</updated>
    
    <content type="html"><![CDATA[<p>23年是各方面都挺满意的一年。</p><span id="more"></span><h1 id="2023总结"><a href="#2023总结" class="headerlink" title="2023总结"></a>2023总结</h1><h2 id="onlyOffice相关"><a href="#onlyOffice相关" class="headerlink" title="onlyOffice相关"></a>onlyOffice相关</h2><p>深入研究了onlyOffice的源码，期间学习并研究了</p><ul><li><p><code>JavaScript Typed Array</code>的使用</p></li><li><p>流的使用</p></li><li><p>字符编码</p></li><li><p>二维变化矩阵</p></li><li><p>其他图形学相关</p></li><li><p>学习onlyOffice的源码：</p><ul><li><code>sdkjs</code>：核心逻辑模块，代码熟悉度40%，目前已熟悉了一些核心动作的代码逻辑，包括文字、输入、渲染、布局等。目前掌握程度可以缓慢修改一些基本需求(因为源码量比较庞大所以未知情况比较多)</li><li><code>web-apps</code>: UI模块，负责前端展示，底层调用<code>sdkjs</code>。代码熟悉度50%。目前掌握程度可以修改大部分的基本需求。</li><li><code>server</code>: node服务端模块，包含了3个服务，<code>SpellChecker</code>/<code>DocService</code>/<code>FileConverter</code>。整体逻辑复杂度和前端来说算简单很多，代码熟悉度50%。目前掌握程度可以修改一些基本需求。</li><li><code>python-example</code>: python文件管理模块，用于文件的上传下载保存。代码熟悉度80%。目前掌握程度可以修改大部分需求。</li></ul></li></ul><h2 id="富文本相关"><a href="#富文本相关" class="headerlink" title="富文本相关"></a>富文本相关</h2><p>深入研究富文本有几个客观因素：</p><ul><li>点睛对富文本的高度定制</li><li><code>wangEditor</code>停止维护</li><li>研究了很久的<code>onlyOffice</code></li></ul><p>基于上面的原因，看了它的源码，了解了它的代码逻辑、插件机制。学习到了很多<code>slate</code>富文本相关的知识。</p><p>并且基于此开发了<code>wangEditor-plugin-docx</code>，用于支持<code>wps</code>和<code>office</code>的样式保留。得益于研究<code>onlyOffice</code>的时候对于<code>docx</code>的研究，在这一块轻松了很多。</p><h2 id="web组的Happy-Friday"><a href="#web组的Happy-Friday" class="headerlink" title="web组的Happy Friday"></a>web组的Happy Friday</h2><p>23年基于公司推动的代码审查，在此基础上创立了<code>Friday Plan</code>。顾名思义就是快乐周五。为了创建固定记忆，时间固定在每周五的1点半，web组每个成员轮流代码审查/技术分享。至今已经走到第31期。中间虽然有人员变动、项目变动，都没有停下来。算是今年最有成就感的事情之一。</p><p>中间自己也做了很多分享，把我在工作和平时学到的知识都分享给大家，我一直坚信最大的受益者就是分享者本身。</p><ul><li>第8期：Antd Mobile源码/用法(源于另一个源码共读计划，目的就是固定web组的技术栈，然后再攻读技术栈中的源码，让工作中没有黑盒子)</li><li>第12期：qiankun源码分享01-import-html-entry(源码共读计划，qiankun微前端系列)</li><li>第16期：Page Rendering(介绍CSR、SSR、SSG、island、RSC的使用，在CSR之外还有更广阔的渲染世界)</li><li>第22期：图形学/脏矩形渲染(图表渲染更新优化方案之一)</li><li>第25期：图形学/空间分割之quadtree算法(图表渲染更新优化方案之一)</li><li>第26期：React特定场景 API(一些常用API的最佳实践，一些不常用API的使用场景)</li><li>第28期：React Performance(React 最佳实践探讨会)</li></ul><h2 id="ESBoot-V2"><a href="#ESBoot-V2" class="headerlink" title="ESBoot V2"></a>ESBoot V2</h2><p><a href="http://esboot.web/">ESBoot</a>是我23年全力维护的一个工程化构建工具。理念为：</p><ul><li><code>Easy to Use</code>: ESBoot was designed from the ground up to be easily installed and used to get your website up and running quickly.</li><li><code>Focus On Your Logic</code>: ESBoot lets you focus on your login code, You don’t need to care about the compile process.</li><li><code>Power By Webpack and more</code>: Simple configuration can provide powerful functionality, incorporating the best practices of webpack.</li></ul><p>创建动机最主要有3：</p><ul><li>我近几年的主要研究方向有三：web工程化、可视化、python。ESBoot算是web工程化方向研究的结晶。</li><li>x 历史项目。历史项目有一个特点就是代码老，很难升级。ESBoot会把工程化细节全部封装，历史项目只需要升级ESBoot版本就可以使用上最新最快的工具。</li><li>为了提升web组的效率，我一直以来的构思就是将web组的人员分层，一层为业务开发人员、要做的就是上面所说的<code>Focus On Your Logic</code>，专注于写业务(甚至不需要了解业务)，<code>ESBoot</code>会提供业务之外的工程化支持。下一层是业务+工具开发人员。这一层的人员需要做的是深读某个模块的业务抽取业务逻辑库提供给业务开发人员使用，产物就是各种lib。再下一层是更加抽象的逻辑支持，比如工程化库、抽象逻辑库。三层对应的是不同的开发水平不同的开发经验，刚进公司的人也可以快速的进入状态，更轻松的开发有更多的时间精进技术让自己进入下一层。</li></ul><p>基于上，<code>ESBoot</code>就是抽象逻辑层的产物。提供了我所能认知的工程化最佳实践，用最稳定最快的工具、打包出更小的体积，提升开发速度，用最简单的配置提供更强大的功能 都是它的使命。为此也读了很多优秀同类库的代码，比如umi、next.js等等。</p><p>ESBoot也封装了各种<code>lint</code>规则、统一化web组的<code>lint</code>，规则统一化、版本化。</p><p>目前<code>ESBoot</code>已经平稳运行了大半年，支撑了公司所有的新的项目 + 历史项目在web组的支持下逐步迁移。</p><p>两个模版：</p><ul><li><code>esboot-react-mp</code>: 包含了多平台代码的最佳实践，感谢华深给这个模版提供了很多最佳实践。</li><li><code>esboot-react-mp</code>: 包含了单平台，如微信公众号页面。</li></ul><p>多个插件：</p><p>想使用<code>vitest</code>写单元测试?<code>tailwindcss</code>写原子css？又不想看繁琐的文档。ESBoot处理了繁琐的接入逻辑，使用者只需要<code>install @dz-web/esboot-plugin-**</code>就可以开箱即用。</p><h2 id="读了很多库的源码"><a href="#读了很多库的源码" class="headerlink" title="读了很多库的源码"></a>读了很多库的源码</h2><p>23年是自己阅读源码能力突飞猛进的一年，读了很多优秀仓库的源码，学习到了很多。也尝试给了一些库提了PR。特别是<code>onlyoffice</code>的源码，代码很老、码量巨大，没有文档，是攻读过最困难的一个。读过它感觉其他仓库都有些简单了。</p><h2 id="其他语言的学习和使用"><a href="#其他语言的学习和使用" class="headerlink" title="其他语言的学习和使用"></a>其他语言的学习和使用</h2><ul><li>Python: 年初抉择了很久，想再深入学习一门语言，在Go/Rust/Python中选择，最终基于各种考虑选择了Python。年底来看效果还不错，现在各种工具都优先使用python开发巩固语法。</li><li>Shell：Shell今年也写了很多，写了一个<code>jenkins-tools</code>工具，用于公司的流水线。<code>onlyOffice</code>中的脚本基本都使用<code>Shell</code>开发。</li></ul><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>23年是各方面都挺满意的一年：</p><ul><li>全年看了24本书、25部电影，去了5个地方。</li><li>注重周末户外活动，包括爬山、运动、羽毛球。</li><li>购置了心仪的相机，学到了许多拍照知识，拍摄了许多满意的照片。</li></ul><h1 id="2024的期望"><a href="#2024的期望" class="headerlink" title="2024的期望"></a>2024的期望</h1><ul><li><code>onlyOffice</code>: Q1 全面进入改的阶段</li><li><code>ESBoot v3</code>: Q1 可以发布全面重构的v3版本，更优秀的源码结构。</li><li><code>Python</code>: 全年 寻找更多的实战时机，Q2从0写一个完整的项目。</li><li>英语: 全年 英语进入全面写的阶段，写技术博客采用纯英文。</li><li>AI: Q3~Q4 看一下之前收藏的prompt教程。</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;23年是各方面都挺满意的一年。&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>关于我的兴趣</title>
    <link href="https://moonlitusun.github.io/2021/05/15/%E5%85%B3%E4%BA%8E%E6%88%91%E7%9A%84%E5%85%B4%E8%B6%A3/"/>
    <id>https://moonlitusun.github.io/2021/05/15/%E5%85%B3%E4%BA%8E%E6%88%91%E7%9A%84%E5%85%B4%E8%B6%A3/</id>
    <published>2021-05-15T11:03:06.000Z</published>
    <updated>2023-11-09T09:20:23.469Z</updated>
    
    <content type="html"><![CDATA[<p>关于我的兴趣</p><span id="more"></span><p>我的兴趣爱好比较广泛，根据兴趣程度以及工作生活我把它分为3个等级。第一等级的有三个：<strong>编程</strong>、<strong>英语</strong>和<strong>投资理财</strong>。编程是我兴趣和工作的结合，在这个互联网构成的世界里，我享受于一步步探索互联网的秘密；英语是我从小到大最喜欢的学科，得益于英语的能力，我可以阅读编程中的各种教程和API文档。这是我迄今为止最满足的事情，当兴趣变成了工作；至于投资理财是20年左右才开始作为自己的第三个主要爱好，起因比较随缘，因为我的第一家公司是一个虚拟货币相关的公司，在那里我第一次接触到了币圈，也见证了比特币和以太坊的崛起。第二家公司是一个为券商和投顾做软件服务的公司，随着业务能力的逐步增强，我对金融行业也产生了浓厚的兴趣。既然一直都活跃在这个行业，那就说明有缘分，有缘又有兴趣一切就顺理成章。现在投资已经变成了我下一个十年计划中最重要的一环。</p><p>第二梯队的爱好是<strong>历史</strong>、<strong>健身</strong>、<strong>设计</strong>。我喜欢读历史和古诗词，喜欢看那些能在几千年时间长河中仍能留下痕迹的人和故事，谢谢当年明月和他的《明朝那些事儿》，我现在最喜欢的朝代就是大明，最近兴趣比较多的是隋唐和民国；跑步健身是工作缘由，一来是想强身健体、再来是追求人体美感；设计则是我喜欢那些令人舒适的设计，古风泼墨、交互自然的APP（如星巴克）、MAC等等都是我所觉得美的东西。</p><p>第三梯队的是一些杂七杂八的东西，<strong>硬件</strong>、<strong>养花养草</strong>、<strong>理科的东西</strong>之类。这些东西可能都是偶尔想起来或碰到了会去研究研究。</p><p><strong>读书</strong>也是我坚持挺久的一件事，从当初要学编程一直看编程书为契机，慢慢延伸到了各个种类的书。比较喜欢看的是自传，因为我觉得自传往往基于现实，离我更近，看完一本自传让我觉得我也度过了他/她的一生。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;关于我的兴趣&lt;/p&gt;</summary>
    
    
    
    <category term="笔记本" scheme="https://moonlitusun.github.io/categories/%E7%AC%94%E8%AE%B0%E6%9C%AC/"/>
    
    
  </entry>
  
  <entry>
    <title>给孩子的第一课</title>
    <link href="https://moonlitusun.github.io/2019/10/10/%E7%BB%99%E5%AD%A9%E5%AD%90%E7%9A%84%E7%AC%AC%E4%B8%80%E8%AF%BE/"/>
    <id>https://moonlitusun.github.io/2019/10/10/%E7%BB%99%E5%AD%A9%E5%AD%90%E7%9A%84%E7%AC%AC%E4%B8%80%E8%AF%BE/</id>
    <published>2019-10-10T02:05:21.000Z</published>
    <updated>2023-11-09T09:20:23.469Z</updated>
    
    <content type="html"><![CDATA[<p>父母是孩子的第一任教师，家庭是人生成长的摇篮。</p><span id="more"></span><p>在我看来，小孩子的一切行为都受父母的影响。做父母的应该在孩子刚开始接触这个世界的开端就循序渐进的给他灌输正确的理念，不能操之过急，小孩子的学习能力强，但是什么都不懂。</p><p>在一些原则问题上不能因为小就惯着，小孩子就像一个刚出世的璞玉，父母是雕刻这个璞玉的第一个工匠，父母在孩子小的时候教育的好，这个孩子在长大后就会少走一些弯路。举一个例子，一个刚出炉的铁水，你可以随意的倒出各种形状，这就是铁的孩童时期。但是如果你要等到铁水冷却成了铁，你再想把它改变形状就会异常艰难，劲小了可能一点也掰不动。虽说人不像铁，人有感情，而且很多道理，必须要经历过，到了某个年龄才会懂。但是做父母的可以先打下良好的基础。下面是我个人的一些观点：</p><h2 id="以身作则"><a href="#以身作则" class="headerlink" title="以身作则"></a>以身作则</h2><p>“上梁不正下梁歪”虽说说的很粗糙，但是是真理，自己都不行，如何教育自己的孩子，有说服力吗？孩子喜欢模仿，你做的好，孩子自然会模仿你的好。所以，一定要以身作则。</p><h2 id="情商"><a href="#情商" class="headerlink" title="情商"></a>情商</h2><ul><li>遵守公共场合秩序</li></ul><p>最近看到了很多关于一些父母，在公共场合没有带好顽皮的孩子而被谴责的新闻。如在19年10月10日在微博上看到，一个女孩在深圳图书馆看书，同桌的有一对母子，儿子很调皮，女孩就跟小孩子说了下要安静，被孩子的母亲开口大骂了一个小时。这件事被人传到了网上，网友极力批评，甚至人肉出那对母子。</p><p>结合我自己在公共场合的一些经历，一些小孩在地铁上、候车室等一些公共场合，非常吵闹。确实也会比较讨厌。</p><p>所以要教育自己的孩子遵守公共场合秩序，比如坐地铁，可以在合适的场景给孩子教育。</p><ul><li><p>如一些人上班很累，闭眼休息，或者大家都不说话。</p><p>告诉孩子这是一个基本礼仪，有些叔叔阿姨上班很累，需要休息会，回去还要给他自己的孩子做饭，陪她玩。像你自己的爸爸妈妈一样，想不想爸爸妈妈陪你玩，如果想了就让叔叔阿姨休息会。</p></li><li><p>给孕妇让座</p><p>阿姨或姐姐肚子里装了个小妹妹(弟弟)累不累，累了就让阿姨坐着。</p></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;父母是孩子的第一任教师，家庭是人生成长的摇篮。&lt;/p&gt;</summary>
    
    
    
    <category term="笔记本" scheme="https://moonlitusun.github.io/categories/%E7%AC%94%E8%AE%B0%E6%9C%AC/"/>
    
    
  </entry>
  
</feed>
